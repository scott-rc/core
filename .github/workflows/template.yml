name: Template

on: push

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: test
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14
      - name: Download dependencies
        run: |
          cd template/src
          go mod download
      - name: Migrate test database
        run: |
          cd template
          ./core.sh --config ./core.example.toml migrate --only-test up
      - name: Run tests
        run: |
          cd template/src
          go test ./test/...

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Publish docker image to GitHub
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: scott-rc/core/core
          tag_with_ref: true
          tag_with_sha: true
          path: ./template
      - name: Publish docker image to Google Cloud
        uses: docker/build-push-action@v1
        with:
          username: _json_key
          password: ${{ secrets.GCP_CONTAINER_REGISTRY_SERVICE_ACCOUNT_KEY }}
          registry: gcr.io
          repository: ${{ secrets.GCP_PROJECT_ID }}/core
          tag_with_ref: true
          tag_with_sha: true
          path: ./template

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: publish
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Setup gcloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: ${{ secrets.GCP_GCLOUD_VERSION }}
          service_account_key: ${{ secrets.GCP_CLOUD_RUN_SERVICE_ACCOUNT_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
      - name: Deploy
        run: |
          gcloud run deploy ${{ secrets.GCP_CLOUD_RUN_SERVICE }} \
            --quiet \
            --image "gcr.io/${{ secrets.GCP_PROJECT_ID }}/core:latest" \
            --platform ${{ secrets.GCP_CLOUD_RUN_PLATFORM }} \
            --region ${{ secrets.GCP_CLOUD_RUN_REGION }}